name: Publish to MCP Registry

on:
  push:
    tags:
      - "v*"

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
          python -m pip install -r requirements.txt

      - name: Install package
        run: python -m pip install -e .

      - name: Run tests
        run: pytest

      - name: Build distribution
        run: python -m build

      - name: Publish to PyPI
        if: ${{ env.PYPI_API_TOKEN != '' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ env.PYPI_API_TOKEN }}

      - name: Install MCP Publisher
        run: |
          VERSION=$(curl -s https://api.github.com/repos/modelcontextprotocol/registry/releases/latest | jq -r '.tag_name' | sed 's/^v//')
          OS=$(uname -s | tr '[:upper:]' '[:lower:]')
          ARCH=$(uname -m | sed 's/x86_64/amd64/;s/aarch64/arm64/')
          curl -L "https://github.com/modelcontextprotocol/registry/releases/download/v${VERSION}/mcp-publisher_${VERSION}_${OS}_${ARCH}.tar.gz" \
            | tar xz mcp-publisher

      - name: Sync server.json version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          jq --arg v "$VERSION" '
            .version = $v
            | .packages = (.packages | map(.version = $v))
          ' server.json > server.tmp
          mv server.tmp server.json

      - name: Login to MCP Registry
        run: ./mcp-publisher login github-oidc

      - name: Publish to MCP Registry
        run: ./mcp-publisher publish
